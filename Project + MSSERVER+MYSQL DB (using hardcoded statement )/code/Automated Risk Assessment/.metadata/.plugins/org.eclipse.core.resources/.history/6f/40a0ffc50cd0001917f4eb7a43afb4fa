package com.hit.sapiens.riskassessment.ui;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import javax.swing.table.AbstractTableModel;

import com.hit.sapiens.riskassessment.beans.Antivirus;
import com.hit.sapiens.riskassessment.beans.RiskEvent;

@SuppressWarnings("serial")
public class AntivirusTableModel extends AbstractTableModel {

	private static final int USER_COL = 0;
	private static final int CATEGORY_COL = 1;
	private static final int AMOUNT_COL = 2;
	private static final int VIRUS_NAME_COL = 3;
	private static final int FILE_NAME_COL = 4;

	private String[] columnNames = { "User", "Category", "Amount", "Virus Name", "File Name" };

	private Map<String, Antivirus> riskEvents;

	public AntivirusTableModel(Map<String, Antivirus> riskEvents) {
		this.riskEvents = riskEvents;
	}

	@Override
	public int getColumnCount() {
		return columnNames.length;
	}

	@Override
	public int getRowCount() {
		int count = 0;
		for (Entry<String, Antivirus> entry : riskEvents.entrySet()) {
			count += entry.getValue().getVirusAmount() + entry.getValue().getMalwareAmount();
		}
		return count;
	}

	@Override
	public String getColumnName(int col) {
		return columnNames[col];
	}

	@Override
	public Object getValueAt(int row, int col) {
		
		for (Entry<String, Antivirus> entry : riskEvents.entrySet()) {
			String user = entry.getValue().getUser();
			for (RiskEvent riskEvent : entry.getValue().getRiskEvents()) {
				switch (col) {
					case USER_COL:
						return user;
					case CATEGORY_COL:
						return riskEvent.getCategory();
					case AMOUNT_COL:
						return randAccess.get(row).getValue().getAmount();		
					case VIRUS_NAME_COL:
						return randAccess.get(row).getValue().getVirusName();
					case FILE_NAME_COL:
						return randAccess.get(row).getValue().getFileName();
					default:
						return randAccess.get(row).getValue().getFileName();
					}
			}
		}
	}
}

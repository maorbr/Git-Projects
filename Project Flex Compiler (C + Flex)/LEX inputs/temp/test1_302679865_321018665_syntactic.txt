Rule (PROGRAM -> program VAR_DEFINITIONS; STATEMENTS end FUNC_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> integer) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> epsilon) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> id STATEMENT_2) 
Rule (STATEMENT_2 -> VARIABLE_1 = EXPRESSION) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> * EXPRESSION) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> * EXPRESSION) 
Rule (EXPRESSION-> real_number) 
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> id STATEMENT_2) 
Rule (STATEMENT_2 -> VARIABLE_1 = EXPRESSION) 
Rule (VARIABLE_1 -> epsilon) 
Rule (EXPRESSION-> real_number) 
Syntax error in line 9: expected 'BRACES_OPEN'/'RETURN'/'ID', got '3.14'
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> BLOCK) 
Rule (BLOCK -> { VAR_DEFINITIONS; STATEMENTS }) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> integer) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> epsilon) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> BLOCK) 
Rule (BLOCK -> { VAR_DEFINITIONS; STATEMENTS }) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> epsilon) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> return STATEMENT_1) 
Rule (STATEMENT_1 -> epsilon) 
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> id STATEMENT_2) 
Rule (STATEMENT_2 -> VARIABLE_1 = EXPRESSION) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> / EXPRESSION) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> * EXPRESSION) 
Rule (EXPRESSION-> real_number) 
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> id STATEMENT_2) 
Rule (STATEMENT_2 -> VARIABLE_1 = EXPRESSION) 
Rule (VARIABLE_1 -> epsilon) 
Rule (EXPRESSION-> real_number) 
Rule (STATEMENTS_1 -> epsilon) 
Rule (STATEMENTS_1 -> epsilon) 
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> return STATEMENT_1) 
Rule (STATEMENT_1 -> EXPRESSION) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> / EXPRESSION) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> / EXPRESSION) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> / EXPRESSION) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> * EXPRESSION) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> return STATEMENT_1) 
Rule (STATEMENT_1 -> epsilon) 
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> id STATEMENT_2) 
Rule (STATEMENT_2 -> (PARAMETERS_LIST)) 
Rule (PARAMETERS_LIST -> epsilon) 
Syntax error in line 25: expected 'BRACES_OPEN'/'RETURN'/'ID', got ')'
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> id STATEMENT_2) 
Rule (STATEMENT_2 -> (PARAMETERS_LIST)) 
Rule (PARAMETERS_LIST -> VARIABLES_LIST) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Syntax error in line 26: expected 'BRACES_OPEN'/'RETURN'/'ID', got ')'
Rule (STATEMENTS_1 -> epsilon) 
Rule (FUNC_DEFINITIONS -> FUNC_DEFINITION FUNC_DEFINITIONS_1) 
Rule (FUNC_DEFINITION -> RETURNED_TYPE id (PARAM_DEFINITIONS) BLOCK) 
Rule (RETURNED_TYPE -> void) 
Rule (PARAM_DEFINITIONS -> epsilon) 
Rule (BLOCK -> { VAR_DEFINITIONS; STATEMENTS }) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> integer) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> epsilon) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> return STATEMENT_1) 
Rule (STATEMENT_1 -> epsilon) 
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> id STATEMENT_2) 
Rule (STATEMENT_2 -> VARIABLE_1 = EXPRESSION) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> * EXPRESSION) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> * EXPRESSION) 
Rule (EXPRESSION-> real_number) 
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> id STATEMENT_2) 
Rule (STATEMENT_2 -> VARIABLE_1 = EXPRESSION) 
Rule (VARIABLE_1 -> epsilon) 
Rule (EXPRESSION-> real_number) 
Rule (STATEMENTS_1 -> epsilon) 
Rule (FUNC_DEFINITIONS_1 -> FUNC_DEFINITION FUNC_DEFINITIONS_1) 
Rule (FUNC_DEFINITION -> RETURNED_TYPE id (PARAM_DEFINITIONS) BLOCK) 
Rule (RETURNED_TYPE -> TYPE) 
Rule (TYPE-> integer) 
Rule (PARAM_DEFINITIONS -> VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Syntax error in line 39: expected 'INTEGER'/'REAL', got 'tmp'
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> epsilon) 
Rule (BLOCK -> { VAR_DEFINITIONS; STATEMENTS }) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> integer) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> epsilon) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> BLOCK) 
Rule (BLOCK -> { VAR_DEFINITIONS; STATEMENTS }) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> integer) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> , VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> ; VAR_DEFINITIONS) 
Rule (VAR_DEFINITIONS -> VAR_DEFINITION VAR_DEFINITIONS_1) 
Rule (VAR_DEFINITION -> TYPE VARIABLES_LIST) 
Rule (TYPE-> real) 
Rule (VARIABLES_LIST -> VARIABLE VARIABLES_LIST_1) 
Rule (VARIABLE -> id VARIABLE_1) 
Rule (VARIABLE_1 -> epsilon) 
Rule (VARIABLES_LIST_1 -> epsilon) 
Rule (VAR_DEFINITIONS_1 -> epsilon) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> return STATEMENT_1) 
Rule (STATEMENT_1 -> epsilon) 
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> id STATEMENT_2) 
Rule (STATEMENT_2 -> VARIABLE_1 = EXPRESSION) 
Rule (VARIABLE_1 -> [int_number]) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> * EXPRESSION) 
Rule (EXPRESSION-> id EXPRESSION_1) 
Rule (EXPRESSION_1 -> * EXPRESSION) 
Rule (EXPRESSION-> real_number) 
Rule (STATEMENTS_1 -> STATEMENTS) 
Rule (STATEMENTS -> STATEMENT; STATEMENTS_1) 
Rule (STATEMENT -> id STATEMENT_2) 
Rule (STATEMENT_2 -> VARIABLE_1 = EXPRESSION) 
Rule (VARIABLE_1 -> epsilon) 
Rule (EXPRESSION-> real_number) 
Rule (STATEMENTS_1 -> epsilon) 
Rule (STATEMENTS_1 -> epsilon) 
Rule (FUNC_DEFINITIONS_1 -> epsilon) 
